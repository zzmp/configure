#!/bin/sh

# Determine target architecture
TARGET=`rustc --version 2> /dev/null | awk '/host:/ { FS = " "; print $2 }'`

# Update dependencies from git
# $1: git
#     The git uri from which to download the dependency
# $2: name (usually the git repo name)
#     The name under which the dependency will be stored
# $3: build location
#     The location to which the git builds (omit trailing '/')
# $4: build command
#     The argument to pass to make (not required)
# $5: dependency
#     Pass dependency name to prevent recompiling nested dependency
#     This will only work if there is but one dependency
#     If a loaded dependency is found, ./configure will not be executed
updateDependency () {
# Clear this dependency's folder if it exists already.
if [ -d deps/$2 ]; then
    rm -rf deps/$2
fi
# Fetch local copy (can be reset with make clean)
  git clone $1 deps/$2
# Build dependency
# (assumes existence of make)
  cd deps/$2
  if [ $5 ] && [ -d ../$5 ]; then
# Copy already loaded dependency
    mkdir -p target/$TARGET/lib
# (symlinking does not work on OS X)
    cp ../../target/$TARGET/lib/* ./target/$TARGET/lib/
  elif [ -x configure ]; then
    ./configure
  fi
  make $4
  cd ../..
# Prepare folder structure dependency targets
  mkdir -p target/$TARGET/lib
# Copy dependency targets
# (symlinking does not work on OS X)
  cp deps/$2$3/* target/$TARGET/lib/
}

